Script started on Tue Jul 21 14:06:10 2015
[?1034hbash-3.2$ whoami
larissa
bash-3.2$ cat Hero.h
#define MAX_NAME 20

class Hero {
  private:
    char name[MAX_NAME + 1];
    double strength;
  public:
    Hero();
    Hero(const char*, double);
    void set(const char*, double);
    bool empty() const;
    double getStrength() const;
    void display(std::ostream&) const;
};

bool operator<(const Hero &,const Hero &);
bash-3.2$ cat Hero.cpp
#include <iostream>
#include <cstring>
#include <iomanip>
#include "Hero.h"

Hero::Hero() {
  strength = 0;
  name[0] = '\0';
}

Hero::Hero(const char* n, double s) {
  set(n, s);
}

void Hero::set(const char* n, double s) {
  strncpy(name, n, MAX_NAME);
  if (s > 0) {
    strength = s;
  } else {
    strength = 0;
  }
}

bool Hero::empty() const {
  return name[0] == '\0' && strength == 0;
}

double Hero::getStrength() const {
  if (strength > 0) {
    return strength;
  }
  return 0;
}

void Hero::display(std::ostream& os) const {
  if (strength != 0 && name[0] != '\0') {
    os << name << " - " << std::fixed << std::setprecision(0) << strength << std::endl;
  }
}

bool operator<(const Hero& a, const Hero& b) {
  return a.getStrength() < b.getStrength();
}
bash-3.2$ cat SuperHero.h
#include "Hero.h"

class SuperHero : public Hero {
  private:
    int aSize; // actual size
    int pMax;  // max size
    int *powers;
  public:
    SuperHero();
    SuperHero(int*, int, int, const char*, double);
    SuperHero(const SuperHero&);
    ~SuperHero();
    void display(std::ostream&) const;
};
bash-3.2$ cat SuperHero.h[Kcpp
#include <iostream>
#include <cstring>
#include <iomanip>
#include <new>
#include "SuperHero.h"

SuperHero::SuperHero() {
  powers = nullptr;
  aSize = 0;
  pMax = 0;
}

SuperHero::SuperHero(int* p, int size, int max, const char* n, double s) {
  powers = new int[max];
  for(int i = 0; i < size; i++) {
    if(p[i] < 0) {
      powers[i] = 0;
    } else {
      powers[i] = p[i];
    }
  }
  aSize = size;
  pMax = max;
  set(n, s);
}

void SuperHero::display(std::ostream& os) const {
  Hero::display(os);
  os << "This hero has the following powers:" << std::endl;
  for(int i = 0; i < aSize; i++) {
    int p = powers[i];
    os << p;
    if(p == 0) {
      os << "-failed power";
    } else if(p >= 1 && p <= 10) {
      os << "-firebolt";
    } else if(p >= 11 && p <= 20) {
      os << "-invisibility";
    } else if(p >= 21 && p <= 30) {
      os << "-double strength";
    } else if(p >= 31 && p <= 40) {
      os << "-shield";
    } else {
      os << "-speed";
    }
    os << std::endl;
  }
}

SuperHero::SuperHero(const SuperHero& src) {
  *this = src;
}

SuperHero::~SuperHero() {
  if(powers != nullptr) {
    delete [] powers;
    powers = nullptr;
  }
}


bash-3.2$ g++ -o main2.cpp Hero.cpp SuperHero.cpp [1@w[1@8[1@ 
bash-3.2$ ./w8
Hercules - 400
This hero has the following powers:
2-firebolt
44-speed
20-invisibility
0-failed power
bash-3.2$ ei[Kxit
exit

Script done on Tue Jul 21 14:07:26 2015
